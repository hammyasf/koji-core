{"version":3,"sources":["../../../src/backend/iap/index.ts"],"names":["IapRoutes","IAP","res","projectId","locals","process","env","KOJI_PROJECT_ID","projectToken","KOJI_PROJECT_TOKEN","rootPath","rootHeaders","userToken","axios","post","RESOLVE_RECEIPTS","headers","data","receiptId","RESOLVE_RECEIPT_BY_ID","sku","RESOLVE_RECEIPTS_BY_SKU","attributes","notificationMessage","UPDATE_RECEIPT","Error","get","GET_PRODUCT_BY_SKU","server"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;IAEYA,S;;;WAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,yBAAAA,S;;IAsBCC,G;AAMX,eAAYC,GAAZ,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,SAAKC,SAAL,GAAiBD,GAAG,CAACE,MAAJ,CAAWD,SAAX,IAAwBE,OAAO,CAACC,GAAR,CAAYC,eAArD;AACA,SAAKC,YAAL,GAAoBN,GAAG,CAACE,MAAJ,CAAWI,YAAX,IAA2BH,OAAO,CAACC,GAAR,CAAYG,kBAA3D;AAEA,SAAKC,QAAL,GAAgB,6BAAhB;AAEA,SAAKC,WAAL,GAAmB;AACjB,2BAAqB,KAAKR,SADT;AAEjB,8BAAwB,KAAKK,YAFZ;AAGjB,sBAAgB;AAHC,KAAnB;AAKD;;;;;uIAGuCI,S;;;;;;;;;uBAEbC,kBAAMC,IAAN,WAAc,KAAKJ,QAAnB,SAA8BV,SAAS,CAACe,gBAAxC,GAA4D;AACjFC,kBAAAA,OAAO,kCACF,KAAKL,WADH;AAEL,iDAA6BC;AAFxB;AAD0E,iBAA5D,C;;;;AAAfK,gBAAAA,I,qBAAAA,I;iDAODA,I;;;;;iDAEA,E;;;;;;;;;;;;;;;;;;;gIAKqBC,S;;;;;;;;;uBAELL,kBAAMC,IAAN,WAAc,KAAKJ,QAAnB,SAA8BV,SAAS,CAACmB,qBAAxC,GAAiE;AACtFH,kBAAAA,OAAO,EAAE,KAAKL,WADwE;AAEtFM,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,SAAS,EAATA;AADI;AAFgF,iBAAjE,C;;;;AAAfD,gBAAAA,I,sBAAAA,I;kDAODA,I;;;;;kDAEA,I;;;;;;;;;;;;;;;;;;;kIAKuBG,G;;;;;;;;;uBAEPP,kBAAMC,IAAN,WAAc,KAAKJ,QAAnB,SAA8BV,SAAS,CAACqB,uBAAxC,GAAmE;AACxFL,kBAAAA,OAAO,EAAE,KAAKL,WAD0E;AAExFM,kBAAAA,IAAI,EAAE;AACJG,oBAAAA,GAAG,EAAHA;AADI;AAFkF,iBAAnE,C;;;;AAAfH,gBAAAA,I,sBAAAA,I;kDAODA,I;;;;;kDAEA,E;;;;;;;;;;;;;;;;;;;2HAKTC,S,EACAI,U,EACAC,mB;;;;;;;;;uBAGyBV,kBAAMC,IAAN,WAAc,KAAKJ,QAAnB,SAA8BV,SAAS,CAACwB,cAAxC,GAA0D;AAC/ER,kBAAAA,OAAO,EAAE,KAAKL,WADiE;AAE/EM,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,SAAS,EAATA,SADI;AAEJI,oBAAAA,UAAU,EAAVA,UAFI;AAGJC,oBAAAA,mBAAmB,EAAnBA;AAHI;AAFyE,iBAA1D,C;;;;AAAfN,gBAAAA,I,sBAAAA,I;kDASDA,I;;;;;sBAED,IAAIQ,KAAJ,CAAU,eAAV,C;;;;;;;;;;;;;;;;;;;yHAIeL,G;;;;;;;;;uBAEEP,kBAAMa,GAAN,WAAa,KAAKhB,QAAlB,SAA6BV,SAAS,CAAC2B,kBAAvC,oBAAmE,KAAKxB,SAAxE,kBAAyFiB,GAAzF,GAAgG;AACrHJ,kBAAAA,OAAO,EAAE,KAAKL;AADuG,iBAAhG,C;;;;AAAfM,gBAAAA,I,oBAAAA,I;kDAIDA,I;;;;;kDAEA,I;;;;;;;;;;;;;;;;;;0GA7EVW,c,2LAgBAA,c,qLAgBAA,c","sourcesContent":["import { Response } from 'express';\nimport axios from 'axios';\nimport { server } from '../@decorators/server';\n\nexport enum IapRoutes {\n  GET_PRODUCT_BY_SKU = '/v1/iap/provider/getProductBySku',\n  RESOLVE_RECEIPTS = '/v1/iap/consumer/resolveReceipts',\n  RESOLVE_RECEIPT_BY_ID = '/v1/iap/consumer/resolveReceiptById',\n  RESOLVE_RECEIPTS_BY_SKU = '/v1/iap/consumer/resolveReceiptsBySku',\n  UPDATE_RECEIPT = '/v1/iap/consumer/updateReceiptAttributes',\n}\n\nexport type UserToken = string;\n\nexport interface IapReceipt {\n  receiptId: string;\n  productId: string;\n  purchasedPrice: number;\n  attributes: { [index: string]: any };\n  transactionIds: {\n    credit: string;\n    debit: string;\n  };\n  datePurchased: Date;\n}\n\nexport class IAP {\n  private projectId: string;\n  private projectToken: string;\n  private rootPath: string;\n  private rootHeaders: Object;\n\n  constructor(res: Response) {\n    this.projectId = res.locals.projectId || process.env.KOJI_PROJECT_ID;\n    this.projectToken = res.locals.projectToken || process.env.KOJI_PROJECT_TOKEN;\n\n    this.rootPath = 'https://rest.api.gokoji.com';\n\n    this.rootHeaders = {\n      'X-Koji-Project-Id': this.projectId,\n      'X-Koji-Project-Token': this.projectToken,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  @server\n  public async resolveReceiptsByUserToken(userToken: UserToken): Promise<IapReceipt[]> {\n    try {\n      const { data } = await axios.post(`${this.rootPath}${IapRoutes.RESOLVE_RECEIPTS}`, {\n        headers: {\n          ...this.rootHeaders,\n          'X-Koji-Iap-Callback-Token': userToken,\n        },\n      });\n\n      return data;\n    } catch (err) {\n      return [];\n    }\n  }\n\n  @server\n  public async resolveReceiptById(receiptId: string): Promise<IapReceipt | null> {\n    try {\n      const { data } = await axios.post(`${this.rootPath}${IapRoutes.RESOLVE_RECEIPT_BY_ID}`, {\n        headers: this.rootHeaders,\n        data: {\n          receiptId,\n        },\n      });\n\n      return data;\n    } catch (err) {\n      return null;\n    }\n  }\n\n  @server\n  public async resolveReceiptsBySku(sku: string): Promise<IapReceipt[]> {\n    try {\n      const { data } = await axios.post(`${this.rootPath}${IapRoutes.RESOLVE_RECEIPTS_BY_SKU}`, {\n        headers: this.rootHeaders,\n        data: {\n          sku,\n        },\n      });\n\n      return data;\n    } catch (err) {\n      return [];\n    }\n  }\n\n  public async updateReceipt(\n    receiptId: string,\n    attributes: { [index: string]: any },\n    notificationMessage?: string,\n  ): Promise<any> {\n    try {\n      const { data } = await axios.post(`${this.rootPath}${IapRoutes.UPDATE_RECEIPT}`, {\n        headers: this.rootHeaders,\n        data: {\n          receiptId,\n          attributes,\n          notificationMessage,\n        },\n      });\n\n      return data;\n    } catch (err) {\n      throw new Error('Service error');\n    }\n  }\n\n  public async loadProduct(sku: string) {\n    try {\n      const { data } = await axios.get(`${this.rootPath}${IapRoutes.GET_PRODUCT_BY_SKU}?appId=${this.projectId}&sku=${sku}`, {\n        headers: this.rootHeaders,\n      });\n\n      return data;\n    } catch (err) {\n      return null;\n    }\n  }\n}\n\nexport interface IIAP extends IAP {}\n"],"file":"index.js"}