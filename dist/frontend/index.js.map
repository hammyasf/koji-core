{"version":3,"sources":["../../src/frontend/index.ts"],"names":["Koji","analytics","iap","identity","playerState","remix","ui","isReady","kojiConfig","kojiConfigOptions","services","configInitialized","console","warn","develop","deploy","remixData","developServices","Object","keys","deployServices","length","Error","baseServiceMap","forEach","serviceName","process","env","window","KOJI_OVERRIDES","overrides","serviceMap","init","addEventListener","e","clientX","clientY","parent","postMessage","_type","_feedKey","location","hash","replace","x","y","err","capture","passive","client"],"mappings":"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","sourcesContent":["import { analytics, Analytics } from './analytics';\nimport { iap, IAP } from './iap';\nimport { identity, Identity } from './identity';\nimport { playerState, PlayerState } from './playerState';\nimport { remix, Remix } from './remix';\nimport { ui, UI } from './ui';\nimport { client } from './@decorators/client';\nimport { equalsIgnoreOrder } from '../utils/equalsIgnoreOrder';\n\nexport interface KojiConfig {\n  develop?: any;\n  deploy?: any;\n  remixData?: any;\n  '@@initialTransform'?: any;\n}\n\nexport type Services = { [key: string]: string | undefined };\n\nexport interface KojiConfigOptions {\n  services: Services;\n}\n\nexport class Koji {\n  isReady: boolean;\n  configInitialized: boolean = false;\n  services: Services = {};\n\n  analytics: Analytics = analytics;\n  iap: IAP = iap;\n  identity: Identity = identity;\n  playerState: PlayerState = playerState;\n  remix: Remix = remix;\n  ui: UI = ui;\n\n  constructor() {\n    this.isReady = false;\n  }\n\n  /**\n   * Prepare this package for use by passing in the data from your koji.json\n   * file. In addition to setting up things like your serviceMap and remix values,\n   * this function will also do some basic structural checks.\n   * @param {Object} kojiConfig Your Koji configuration object (e.g., require('./koji.json'))\n   * @param {Object} kojiConfig.develop Instructions to set up the development/editor environment for your services\n   * @param {Object} kojiConfig.deploy Instructions to deploy your services to production\n   * @param {Object} kojiConfig.remixData The base values for your customizable remix data\n   * @param {Object} kojiConfig.['@@initialTransform'] The values that will be loaded for new remixes\n   */\n  public config(kojiConfig: KojiConfig = {}, kojiConfigOptions: KojiConfigOptions = { services: {} }): void {\n    if (this.configInitialized) {\n      console.warn('You are trying to run config more than one time. The previous configuration options will not be overwritten but this could indicate unexpected behavior in your project.');\n      return;\n    }\n\n    const { develop = {}, deploy = {}, remixData = {} } = kojiConfig;\n\n    const developServices = Object.keys(develop);\n    const deployServices = Object.keys(deploy);\n\n    // Require at least one deploy service to be defined\n    if (deployServices.length === 0) throw new Error('Your configuration does not include any services for');\n\n    // Require at least one develop service to be defined\n    if (developServices.length === 0) throw new Error('Your configuration does not include any services for development');\n\n    // Require the develop and deploy services to match\n    if (!equalsIgnoreOrder(deployServices, developServices)) throw new Error('Your develop and deploy services do not match');\n\n    // Create the base service map and look for env vars we know to exist\n    const baseServiceMap: Services = {};\n    deployServices.forEach((serviceName) => {\n      baseServiceMap[serviceName] = process.env[`KOJI_SERVICE_URL_${serviceName}`];\n    });\n\n    // If the user has explicitly passed in values, use those instead\n    Object.keys(kojiConfigOptions.services).forEach((serviceName) => {\n      if (kojiConfigOptions.services[serviceName]) {\n        baseServiceMap[serviceName] = kojiConfigOptions.services[serviceName];\n      }\n    });\n\n    // Require a value for each service\n    Object.keys(baseServiceMap).forEach((serviceName) => {\n      if (!baseServiceMap[serviceName]) throw new Error(`Unable to find a value for the ${serviceName} service. If your value is not available at \\`process.env.KOJI_SERVICE_URL_${serviceName}\\`, you may need to pass it explicitly using the second, kojiConfigOptions parameter when calling Koji.config`);\n    });\n\n    // Handle overrides\n    if (window.KOJI_OVERRIDES) {\n      const { overrides = {} } = window.KOJI_OVERRIDES;\n      if (overrides && overrides.serviceMap) {\n        this.services = {\n          ...baseServiceMap,\n          ...overrides.serviceMap,\n        };\n      }\n    } else {\n      this.services = { ...baseServiceMap };\n    }\n\n    // Initialize remix data\n    this.remix.init(remixData);\n  }\n\n  @client\n  ready() {\n    this.isReady = true;\n\n    // Add a listener to pass click events up to the parent window,\n    // as there is no way for the platform to know these clicks are\n    // happening due to iframe constraints\n    window.addEventListener(\n      'click',\n      (e) => {\n        try {\n          const { clientX, clientY } = e;\n          window.parent.postMessage(\n            {\n              _type: 'Koji.ClickEvent',\n              _feedKey: window.location.hash.replace('#koji-feed-key=', ''),\n              x: clientX,\n              y: clientY,\n            },\n            '*',\n          );\n        } catch (err) {\n          //\n        }\n      },\n      { capture: true, passive: true },\n    );\n\n    // Send the ready message, letting the platform know it's okay\n    // to release any queued messages\n    window.parent.postMessage(\n      {\n        _type: 'KojiPreview.Ready',\n      },\n      '*',\n    );\n  }\n}\n\nexport default new Koji();\n"],"file":"index.js"}