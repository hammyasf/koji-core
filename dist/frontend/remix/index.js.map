{"version":3,"sources":["../../../src/frontend/remix/index.ts"],"names":["Remix","kojiConfig","remixData","Error","isInitialized","console","warn","overrides","window","KOJI_OVERRIDES","values","arrayMerge","dest","source","newValue","sendValues","newValues","sendMessage","kojiEventName","data","path","skipUpdate","KojiBridge","client","remix"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAQaA,K;;;;;;;;;;;;;;;+FACW,E;sGACW,K;;;;;;yBAG5BC,U,EAAiB;AAAA,UACZC,SADY,GACED,UADF,CACZC,SADY;AAGpB,UAAI,CAACA,SAAL,EAAgB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;;AAEhB,UAAI,KAAKC,aAAT,EAAwB;AACtBC,QAAAA,OAAO,CAACC,IAAR,CAAa,kEAAb;AACA;AACD;;AAED,WAAKF,aAAL,GAAqB,IAArB;AAEA,UAAIG,SAAS,GAAG,EAAhB;;AACA,UAAIC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACC,cAAP,CAAsBF,SAAnD,EAA8D;AAC5DA,QAAAA,SAAS,GAAGC,MAAM,CAACC,cAAP,CAAsBF,SAAtB,CAAgCL,SAAhC,IAA6C,EAAzD;AACD;;AAED,WAAKQ,MAAL,GAAc,2BAAUR,SAAV,EAAqBK,SAArB,EAAgC;AAC5CI,QAAAA,UAAU,EAAE,oBAACC,IAAD,EAAOC,MAAP;AAAA,iBAAkBA,MAAlB;AAAA;AADgC,OAAhC,CAAd;AAGD;;;0BAGK;AACJ,aAAO,KAAKH,MAAZ;AACD;;;wBAGGI,Q,EAAwB;AAC1B,WAAKJ,MAAL,GAAc,2BAAU,KAAKA,MAAf,EAAuBI,QAAvB,EAAiC;AAC7CH,QAAAA,UAAU,EAAE,oBAACC,IAAD,EAAOC,MAAP;AAAA,iBAAkBA,MAAlB;AAAA;AADiC,OAAjC,CAAd;AAGA,aAAO,KAAKE,UAAL,EAAP;AACD;;;8BAGSC,S,EAAyB;AACjC,WAAKN,MAAL,GAAcM,SAAd;AACA,aAAO,KAAKD,UAAL,EAAP;AACD;;;6BAGQ;AACP,WAAKE,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE;AADA,OAAjB;AAGD;;;iCAEoB;AACnB,WAAKD,WAAL,CAAiB;AACfC,QAAAA,aAAa,EAAE,sBADA;AAEfC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE,CAAC,WAAD,CADF;AAEJN,UAAAA,QAAQ,EAAE,KAAKJ,MAFX;AAGJW,UAAAA,UAAU,EAAE;AAHR;AAFS,OAAjB;AAQD;;;EA9DwBC,sB,kFAIxBC,c,sJAuBAA,c,qJAKAA,c,2JAQAA,c,8JAMAA,c;;AAmBI,IAAMC,KAAK,GAAG,IAAIxB,KAAJ,EAAd","sourcesContent":["import deepmerge from 'deepmerge';\nimport { client } from '../@decorators/client';\nimport { KojiBridge } from '../kojiBridge';\n\ndeclare global {\n  interface Window {\n    KOJI_OVERRIDES: any;\n  }\n}\n\nexport class Remix extends KojiBridge {\n  private values: any = {};\n  private isInitialized: boolean = false;\n\n  @client\n  init(kojiConfig: any) {\n    const { remixData } = kojiConfig;\n\n    if (!remixData) throw new Error('Unable to find remixData');\n\n    if (this.isInitialized) {\n      console.warn('You are trying to initialize your remix data more than one time.');\n      return;\n    }\n\n    this.isInitialized = true;\n\n    let overrides = {};\n    if (window.KOJI_OVERRIDES && window.KOJI_OVERRIDES.overrides) {\n      overrides = window.KOJI_OVERRIDES.overrides.remixData || {};\n    }\n\n    this.values = deepmerge(remixData, overrides, {\n      arrayMerge: (dest, source) => source,\n    });\n  }\n\n  @client\n  get() {\n    return this.values;\n  }\n\n  @client\n  set(newValue: Object): void {\n    this.values = deepmerge(this.values, newValue, {\n      arrayMerge: (dest, source) => source,\n    });\n    return this.sendValues();\n  }\n\n  @client\n  overwrite(newValues: Object): void {\n    this.values = newValues;\n    return this.sendValues();\n  }\n\n  @client\n  finish() {\n    this.sendMessage({\n      kojiEventName: 'KojiPreview.Finish',\n    });\n  }\n\n  private sendValues() {\n    this.sendMessage({\n      kojiEventName: 'KojiPreview.SetValue',\n      data: {\n        path: ['remixData'],\n        newValue: this.values,\n        skipUpdate: true,\n      },\n    });\n  }\n}\n\nexport const remix = new Remix();\n"],"file":"index.js"}