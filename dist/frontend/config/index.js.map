{"version":3,"sources":["../../../src/frontend/config/index.ts"],"names":["Config","serviceMap","Object","keys","process","env","reduce","services","envVariable","startsWith","replace","toLowerCase","KojiBridge","client","config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;IAMaA,M;;;;;;;;;;;;;;;mGACc,E;;;;;;2BAGlB;AACL,WAAKC,UAAL,GAAkBC,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAApB,EAAyBC,MAAzB,CAAgC,UAACC,QAAD,EAAqCC,WAArC,EAAqD;AACrG,YAAIA,WAAW,CAACC,UAAZ,CAAuB,kBAAvB,CAAJ,EAAgD;AAC9C,iDACKF,QADL,4CAEGA,QAAQ,CAACC,WAAW,CAACE,OAAZ,CAAoB,mBAApB,EAAyC,EAAzC,EAA6CC,WAA7C,EAAD,CAFX,EAE0EP,OAAO,CAACC,GAAR,CAAYG,WAAZ,CAF1E;AAID;;AACD,eAAOD,QAAP;AACD,OARiB,EAQf,EARe,CAAlB;AASD;;;EAdyBK,sB,kFAGzBC,c;;AAcI,IAAMC,MAAM,GAAG,IAAId,MAAJ,EAAf","sourcesContent":["import { KojiBridge } from '../kojiBridge';\nimport { client } from '../@decorators/client';\n\nexport interface ServiceMap {\n  [index: string]: any;\n}\n\nexport class Config extends KojiBridge {\n  serviceMap: ServiceMap = {};\n\n  @client\n  load() {\n    this.serviceMap = Object.keys(process.env).reduce((services: { [index: string]: any }, envVariable) => {\n      if (envVariable.startsWith('KOJI_SERVICE_URL')) {\n        return {\n          ...services,\n          [services[envVariable.replace('KOJI_SERVICE_URL_', '').toLowerCase()]]: process.env[envVariable],\n        };\n      }\n      return services;\n    }, {});\n  }\n}\n\nexport const config = new Config();\n"],"file":"index.js"}