{"version":3,"sources":["../../../src/frontend/identity/index.ts"],"names":["Identity","sendMessageAndAwaitResponse","kojiEventName","data","grants","allowAnonymous","userToken","hasGrants","usageDescription","KojiBridge","client","identity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;IAIaA,Q;;;;;;;;;;;;;;;;;;;;;uBAGmB,KAAKC,2BAAL,CAAiC;AAC3DC,kBAAAA,aAAa,EAAE,sBAD4C;AAE3DC,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,MAAM,EAAE,EADJ;AAEJC,oBAAAA,cAAc,EAAE;AAFZ;AAFqD,iBAAjC,EAMzB,uBANyB,C;;;;AAApBC,gBAAAA,S,yBAAAA,S;iDAQDA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGSF,gBAAAA,M,8DAAgC,E;;uBACpB,KAAKH,2BAAL,CAAiC;AAC3DC,kBAAAA,aAAa,EAAE,wBAD4C;AAE3DC,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,MAAM,EAANA;AADI;AAFqD,iBAAjC,EAKzB,yBALyB,C;;;;AAApBG,gBAAAA,S,0BAAAA,S;kDAODA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGWH,gBAAAA,M,8DAAgC,E;AAAII,gBAAAA,gB;;uBAC1B,KAAKP,2BAAL,CAAiC;AAC3DC,kBAAAA,aAAa,EAAE,sBAD4C;AAE3DC,kBAAAA,IAAI,EAAE;AACJC,oBAAAA,MAAM,EAANA,MADI;AAEJI,oBAAAA,gBAAgB,EAAhBA;AAFI;AAFqD,iBAAjC,EAMzB,uBANyB,EAMA,uBANA,C;;;;AAApBF,gBAAAA,S,0BAAAA,S;kDAQDA,S;;;;;;;;;;;;;;;;;;EAlCmBG,sB,8EAC3BC,c;;AAqCI,IAAMC,QAAQ,GAAG,IAAIX,QAAJ,EAAjB","sourcesContent":["import { KojiBridge } from '../kojiBridge';\nimport { client } from '../@decorators/client';\n\nexport type AuthGrantCapability = 'push_notifications' | 'username';\n\nexport class Identity extends KojiBridge {\n  @client\n  async getToken(): Promise<UserToken> {\n    const { userToken } = await this.sendMessageAndAwaitResponse({\n      kojiEventName: '@@koji/auth/getToken',\n      data: {\n        grants: [],\n        allowAnonymous: true,\n      },\n    }, 'KojiAuth.TokenCreated');\n\n    return userToken;\n  }\n\n  async checkGrants(grants: AuthGrantCapability[] = []): Promise<boolean> {\n    const { hasGrants } = await this.sendMessageAndAwaitResponse({\n      kojiEventName: '@@koji/auth/checkGrant',\n      data: {\n        grants,\n      },\n    }, 'KojiAuth.GrantsResolved');\n\n    return hasGrants;\n  }\n\n  async requestGrants(grants: AuthGrantCapability[] = [], usageDescription?: string): Promise<UserToken> {\n    const { userToken } = await this.sendMessageAndAwaitResponse({\n      kojiEventName: '@@koji/auth/getToken',\n      data: {\n        grants,\n        usageDescription,\n      },\n    }, 'KojiAuth.TokenCreated', 'KojiAuth.GrantsDenied');\n\n    return userToken;\n  }\n}\n\nexport const identity = new Identity();\n"],"file":"index.js"}