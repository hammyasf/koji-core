{"version":3,"sources":["../../../src/backend/database/index.ts"],"names":["DatabaseRoutes","PredicateOperator","Database","config","rootPath","rootHeaders","projectId","projectToken","collection","documentName","axios","post","GET","headers","data","document","GET_COLLECTIONS","collections","queryKey","queryValue","SEARCH","predicateKey","predicateOperation","predicateValue","predicate","key","operation","value","documentNames","GET_ALL","results","predicateValues","GET_ALL_WHERE","documentBody","SET","UPDATE","ARRAY_PUSH","ARRAY_REMOVE","DELETE","Base","server"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEYA,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;IAaAC,iB;;;WAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,iCAAAA,iB;;IAaCC,Q;;;;;AAIX,oBAAYC,MAAZ,EAA+C;AAAA;;AAAA;;AAC7C,8BAAMA,MAAN;;AAD6C;;AAAA;;AAG7C,UAAKC,QAAL,GAAgB,iCAAhB;AAEA,UAAKC,WAAL,GAAmB;AACjB,2BAAqB,MAAKC,SADT;AAEjB,8BAAwB,MAAKC,YAFZ;AAGjB,sBAAgB;AAHC,KAAnB;AAL6C;AAU9C;;;;;0FAGmBC,U,EAAoBC,Y;;;;;;;;uBACfC,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACY,GAA7C,GAAoD;AACzEC,kBAAAA,OAAO,EAAE,KAAKR,WAD2D;AAEzES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJC,oBAAAA,YAAY,EAAZA;AAFI;AAFmE,iBAApD,C;;;;AAAfK,gBAAAA,I,qBAAAA,I;iDAODA,IAAI,CAACC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAOFL,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACgB,eAA7C,GAAgE;AACxEH,kBAAAA,OAAO,EAAE,KAAKR,WAD0D;AAExES,kBAAAA,IAAI,EAAE;AAFkE,iBAAhE,C;;;;2DADRA,I,CAAQG,W;AAAAA,gBAAAA,W,sCAAc,E;kDAMjBA,W;;;;;;;;;;;;;;;;;;;8FAIcT,U,EAAoBU,Q,EAAkBC,U;;;;;;;;uBACpCT,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACoB,MAA7C,GAAuD;AAC5EP,kBAAAA,OAAO,EAAE,KAAKR,WAD8D;AAE5ES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJU,oBAAAA,QAAQ,EAARA,QAFI;AAGJC,oBAAAA,UAAU,EAAVA;AAHI;AAFsE,iBAAvD,C;;;;AAAfL,gBAAAA,I,sBAAAA,I;kDASDA,I;;;;;;;;;;;;;;;;;;;gGAKPN,U,EACAa,Y,EACAC,kB,EACAC,c;;;;;;;;uBAEuBb,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACY,GAA7C,GAAoD;AACzEC,kBAAAA,OAAO,EAAE,KAAKR,WAD2D;AAEzES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJgB,oBAAAA,SAAS,EAAE;AACTC,sBAAAA,GAAG,EAAEJ,YADI;AAETK,sBAAAA,SAAS,EAAEJ,kBAFF;AAGTK,sBAAAA,KAAK,EAAEJ;AAHE;AAFP;AAFmE,iBAApD,C;;;;AAAfT,gBAAAA,I,sBAAAA,I;kDAYDA,IAAI,CAACC,Q;;;;;;;;;;;;;;;;;;;8FAISP,U,EAAoBoB,a;;;;;;;;uBAClBlB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAAC6B,OAA7C,GAAwD;AAC7EhB,kBAAAA,OAAO,EAAE,KAAKR,WAD+D;AAE7ES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJoB,oBAAAA,aAAa,EAAbA;AAFI;AAFuE,iBAAxD,C;;;;AAAfd,gBAAAA,I,sBAAAA,I;kDAQDA,IAAI,CAACgB,O;;;;;;;;;;;;;;;;;;;mGAKZtB,U,EACAa,Y,EACAC,kB,EACAS,e;;;;;;;;uBAEuBrB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACgC,aAA7C,GAA8D;AACnFnB,kBAAAA,OAAO,EAAE,KAAKR,WADqE;AAEnFS,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJa,oBAAAA,YAAY,EAAZA,YAFI;AAGJC,oBAAAA,kBAAkB,EAAlBA,kBAHI;AAIJS,oBAAAA,eAAe,EAAfA;AAJI;AAF6E,iBAA9D,C;;;;AAAfjB,gBAAAA,I,sBAAAA,I;kDAUDA,IAAI,CAACgB,O;;;;;;;;;;;;;;;;;;;2FAIGtB,U,EAAoBC,Y,EAAsBwB,Y;;;;;;;;uBAClCvB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACkC,GAA7C,GAAoD;AACzErB,kBAAAA,OAAO,EAAE,KAAKR,WAD2D;AAEzES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJyB,oBAAAA,YAAY,EAAZA,YAFI;AAGJxB,oBAAAA,YAAY,EAAZA;AAHI;AAFmE,iBAApD,C;;;;AAAfK,gBAAAA,I,sBAAAA,I;kDASDA,I;;;;;;;;;;;;;;;;;;;8FAIWN,U,EAAoBC,Y,EAAsBwB,Y;;;;;;;;uBACrCvB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACmC,MAA7C,GAAuD;AAC5EtB,kBAAAA,OAAO,EAAE,KAAKR,WAD8D;AAE5ES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJyB,oBAAAA,YAAY,EAAZA,YAFI;AAGJxB,oBAAAA,YAAY,EAAZA;AAHI;AAFsE,iBAAvD,C;;;;AAAfK,gBAAAA,I,sBAAAA,I;kDASDA,I;;;;;;;;;;;;;;;;;;;iGAIcN,U,EAAoBC,Y,EAAsBwB,Y;;;;;;;;uBACxCvB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACoC,UAA7C,GAA2D;AAChFvB,kBAAAA,OAAO,EAAE,KAAKR,WADkE;AAEhFS,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJyB,oBAAAA,YAAY,EAAZA,YAFI;AAGJxB,oBAAAA,YAAY,EAAZA;AAHI;AAF0E,iBAA3D,C;;;;AAAfK,gBAAAA,I,sBAAAA,I;kDASDA,I;;;;;;;;;;;;;;;;;;;oGAIgBN,U,EAAoBC,Y,EAAsBwB,Y;;;;;;;;uBAC1CvB,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACqC,YAA7C,GAA6D;AAClFxB,kBAAAA,OAAO,EAAE,KAAKR,WADoE;AAElFS,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJyB,oBAAAA,YAAY,EAAZA,YAFI;AAGJxB,oBAAAA,YAAY,EAAZA;AAHI;AAF4E,iBAA7D,C;;;;AAAfK,gBAAAA,I,uBAAAA,I;mDASDA,I;;;;;;;;;;;;;;;;;;;gGAIWN,U,EAAoBC,Y;;;;;;;;uBACfC,kBAAMC,IAAN,WAAc,KAAKP,QAAnB,SAA8BJ,cAAc,CAACsC,MAA7C,GAAuD;AAC5EzB,kBAAAA,OAAO,EAAE,KAAKR,WAD8D;AAE5ES,kBAAAA,IAAI,EAAE;AACJN,oBAAAA,UAAU,EAAVA,UADI;AAEJC,oBAAAA,YAAY,EAAZA;AAFI;AAFsE,iBAAvD,C;;;;AAAfK,gBAAAA,I,uBAAAA,I;mDAQDA,I;;;;;;;;;;;;;;;;;;;EA/KmByB,U,gEAgB3BC,c,+IAYAA,c,kJAYAA,c,4IAcAA,c,4IAsBAA,c,+IAaAA,c,4IAoBAA,c,uIAcAA,c,6IAcAA,c,kJAcAA,c,+IAcAA,c","sourcesContent":["import axios from 'axios';\nimport { server } from '../@decorators/server';\nimport { Base, BackendConfigurationInput } from '../base';\n\nexport enum DatabaseRoutes {\n  ARRAY_PUSH = '/v1/store/update/push',\n  ARRAY_REMOVE = '/v1/store/update/remove',\n  DELETE = '/v1/store/delete',\n  GET = '/v1/store/get',\n  GET_ALL = '/v1/store/getAll',\n  GET_ALL_WHERE = '/v1/store/getAllWhere',\n  GET_COLLECTIONS = '/v1/store/getCollections',\n  SEARCH = '/v1/store/search',\n  SET = '/v1/store/set',\n  UPDATE = '/v1/store/update',\n}\n\nexport enum PredicateOperator {\n  LESS_THAN = '<',\n  LESS_THAN_OR_EQUAL_TO = '<=',\n  EQUAL_TO = '==',\n  GREATER_THAN = '>',\n  GREATER_THAN_OR_EQUAL_TO = '>=',\n  NOT_EQUAL_TO = '!=',\n  ARRAY_CONTAINS = 'array-contains',\n  ARRAY_CONTAINS_ANY = 'array-contains-any',\n  IN = 'in',\n  NOT_IN = 'not-in',\n}\n\nexport class Database extends Base {\n  private rootPath: string;\n  private rootHeaders: Object;\n\n  constructor(config: BackendConfigurationInput) {\n    super(config);\n\n    this.rootPath = 'https://database.api.gokoji.com';\n\n    this.rootHeaders = {\n      'X-Koji-Project-Id': this.projectId,\n      'X-Koji-Project-Token': this.projectToken,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  @server\n  public async get<T>(collection: string, documentName?: string | null): Promise<T> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.GET}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentName,\n      },\n    });\n    return data.document;\n  }\n\n  @server\n  public async getCollections(): Promise<string[]> {\n    const {\n      data: { collections = [] },\n    } = await axios.post(`${this.rootPath}${DatabaseRoutes.GET_COLLECTIONS}`, {\n      headers: this.rootHeaders,\n      data: {},\n    });\n\n    return collections;\n  }\n\n  @server\n  public async search<T>(collection: string, queryKey: string, queryValue: string): Promise<T[]> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.SEARCH}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        queryKey,\n        queryValue,\n      },\n    });\n\n    return data;\n  }\n\n  @server\n  public async getWhere<T>(\n    collection: string,\n    predicateKey: string,\n    predicateOperation: PredicateOperator,\n    predicateValue: string,\n  ): Promise<T> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.GET}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        predicate: {\n          key: predicateKey,\n          operation: predicateOperation,\n          value: predicateValue,\n        },\n      },\n    });\n\n    return data.document;\n  }\n\n  @server\n  public async getAll<T>(collection: string, documentNames: string[]): Promise<T[]> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.GET_ALL}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentNames,\n      },\n    });\n\n    return data.results;\n  }\n\n  @server\n  public async getAllWhere<T>(\n    collection: string,\n    predicateKey: string,\n    predicateOperation: PredicateOperator,\n    predicateValues: string[],\n  ): Promise<T[]> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.GET_ALL_WHERE}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        predicateKey,\n        predicateOperation,\n        predicateValues,\n      },\n    });\n\n    return data.results;\n  }\n\n  @server\n  public async set(collection: string, documentName: string, documentBody: any): Promise<boolean> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.SET}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentBody,\n        documentName,\n      },\n    });\n\n    return data;\n  }\n\n  @server\n  public async update(collection: string, documentName: string, documentBody: any): Promise<boolean | void> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.UPDATE}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentBody,\n        documentName,\n      },\n    });\n\n    return data;\n  }\n\n  @server\n  public async arrayPush(collection: string, documentName: string, documentBody: any): Promise<boolean | void> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.ARRAY_PUSH}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentBody,\n        documentName,\n      },\n    });\n\n    return data;\n  }\n\n  @server\n  public async arrayRemove(collection: string, documentName: string, documentBody: any): Promise<boolean | void> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.ARRAY_REMOVE}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentBody,\n        documentName,\n      },\n    });\n\n    return data;\n  }\n\n  @server\n  public async delete(collection: string, documentName: string): Promise<boolean | void> {\n    const { data } = await axios.post(`${this.rootPath}${DatabaseRoutes.DELETE}`, {\n      headers: this.rootHeaders,\n      data: {\n        collection,\n        documentName,\n      },\n    });\n\n    return data;\n  }\n}\n\nexport interface IDatabase extends Database {}\n"],"file":"index.js"}