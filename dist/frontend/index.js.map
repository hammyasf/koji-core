{"version":3,"sources":["../../src/frontend/index.ts"],"names":["Koji","analytics","iap","identity","playerState","remix","ui","isReady","projectId","process","env","KOJI_PROJECT_ID","projectToken","KOJI_PROJECT_TOKEN","window","addEventListener","e","clientX","clientY","parent","postMessage","_type","_feedKey","location","hash","replace","x","y","err","capture","passive","id","token","client"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAEMA,I;AAaJ,kBAAc;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPSC,oBAOT;AAAA,kDANHC,QAMG;AAAA,uDALOC,kBAKP;AAAA,0DAJaC,wBAIb;AAAA,oDAHCC,YAGD;AAAA,iDAFLC,MAEK;AACZ,SAAKC,OAAL,GAAe,KAAf;AAEA,SAAKC,SAAL,GAAiBC,OAAO,CAACC,GAAR,CAAYC,eAA7B;AACA,SAAKC,YAAL,GAAoBH,OAAO,CAACC,GAAR,CAAYG,kBAAhC;AACD;;;;4BAGO;AACN,WAAKN,OAAL,GAAe,IAAf;AAEAO,MAAAA,MAAM,CAACC,gBAAP,CACE,OADF,EAEE,UAACC,CAAD,EAAO;AACL,YAAI;AAAA,cACMC,OADN,GAC2BD,CAD3B,CACMC,OADN;AAAA,cACeC,OADf,GAC2BF,CAD3B,CACeE,OADf;AAEFJ,UAAAA,MAAM,CAACK,MAAP,CAAcC,WAAd,CACE;AACEC,YAAAA,KAAK,EAAE,iBADT;AAEEC,YAAAA,QAAQ,EAAER,MAAM,CAACS,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,iBAA7B,EAAgD,EAAhD,CAFZ;AAGEC,YAAAA,CAAC,EAAET,OAHL;AAIEU,YAAAA,CAAC,EAAET;AAJL,WADF,EAOE,GAPF;AASD,SAXD,CAWE,OAAOU,GAAP,EAAY,CACZ;AACD;AACF,OAjBH,EAkBE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAlBF;AAqBAhB,MAAAA,MAAM,CAACK,MAAP,CAAcC,WAAd,CACE;AACEC,QAAAA,KAAK,EAAE;AADT,OADF,EAIE,GAJF;AAMD;;;qCAEgBU,E,EAAYC,K,EAAe;AAC1C,WAAKxB,SAAL,GAAiBuB,EAAjB;AACA,WAAKnB,YAAL,GAAoBoB,KAApB;AACD;;;uCAEkB;AACjB,aAAO;AACLxB,QAAAA,SAAS,EAAE,KAAKA,SADX;AAELI,QAAAA,YAAY,EAAE,KAAKA;AAFd,OAAP;AAID;;;qFA3CAqB,c;;eA8CY,IAAIjC,IAAJ,E","sourcesContent":["import { analytics, Analytics } from './analytics';\nimport { iap, IAP } from './iap';\nimport { identity, Identity } from './identity';\nimport { playerState, PlayerState } from './playerState';\nimport { remix, Remix } from './remix';\nimport { ui, UI } from './ui';\nimport { client } from './@decorators/client';\n\nclass Koji {\n  projectId?: string;\n  projectToken?: string;\n\n  isReady: boolean;\n\n  analytics: Analytics = analytics;\n  iap: IAP = iap;\n  identity: Identity = identity;\n  playerState: PlayerState = playerState;\n  remix: Remix = remix;\n  ui: UI = ui;\n\n  constructor() {\n    this.isReady = false;\n\n    this.projectId = process.env.KOJI_PROJECT_ID;\n    this.projectToken = process.env.KOJI_PROJECT_TOKEN;\n  }\n\n  @client\n  ready() {\n    this.isReady = true;\n\n    window.addEventListener(\n      'click',\n      (e) => {\n        try {\n          const { clientX, clientY } = e;\n          window.parent.postMessage(\n            {\n              _type: 'Koji.ClickEvent',\n              _feedKey: window.location.hash.replace('#koji-feed-key=', ''),\n              x: clientX,\n              y: clientY,\n            },\n            '*',\n          );\n        } catch (err) {\n          //\n        }\n      },\n      { capture: true, passive: true },\n    );\n\n    window.parent.postMessage(\n      {\n        _type: 'KojiPreview.Ready',\n      },\n      '*',\n    );\n  }\n\n  setProjectValues(id: string, token: string) {\n    this.projectId = id;\n    this.projectToken = token;\n  }\n\n  getProjectValues() {\n    return {\n      projectId: this.projectId,\n      projectToken: this.projectToken,\n    };\n  }\n}\n\nexport default new Koji();\n"],"file":"index.js"}