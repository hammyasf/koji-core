{"version":3,"sources":["../../../src/frontend/iap/index.ts"],"names":["IAP","sku","purchaseOptions","sendMessageAndAwaitResponse","kojiEventName","data","success","userToken","receiptId","KojiBridge","client","iap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;IAaaA,G;;;;;;;;;;;;;0HAESC,G;;;;;;;;;;;;AAAaC,gBAAAA,e,2DAAmC,E;;uBAClB,KAAKC,2BAAL,CAAiC;AAC/EC,kBAAAA,aAAa,EAAE,2BADgE;AAE/EC,kBAAAA,IAAI,EAAE;AACJJ,oBAAAA,GAAG,EAAHA,GADI;AAEJC,oBAAAA,eAAe,EAAfA;AAFI;AAFyE,iBAAjC,EAM7C,0BAN6C,C;;;;AAAxCI,gBAAAA,O,yBAAAA,O;AAASC,gBAAAA,S,yBAAAA,S;AAAWC,gBAAAA,S,yBAAAA,S;iDAQrB;AACLF,kBAAAA,OAAO,EAAPA,OADK;AAELC,kBAAAA,SAAS,EAATA,SAFK;AAGLC,kBAAAA,SAAS,EAATA;AAHK,iB;;;;;;;;;;;;;;;;;;EAXcC,sB,mFACtBC,c;;AAkBI,IAAMC,GAAG,GAAG,IAAIX,GAAJ,EAAZ","sourcesContent":["import { KojiBridge } from '../kojiBridge';\nimport { client } from '../@decorators/client';\n\nexport interface PurchaseOptions {\n  amount?: number;\n  customMessage?: string;\n}\n\nexport interface Purchase {\n  success: boolean;\n  userToken: UserToken;\n  receiptId?: string;\n}\n\nexport class IAP extends KojiBridge {\n  @client\n  async startPurchase(sku: string, purchaseOptions: PurchaseOptions = {}): Promise<Purchase> {\n    const { success, userToken, receiptId } = await this.sendMessageAndAwaitResponse({\n      kojiEventName: '@@koji/iap/promptPurchase',\n      data: {\n        sku,\n        purchaseOptions,\n      },\n    }, 'KojiIap.PurchaseFinished');\n\n    return {\n      success,\n      userToken,\n      receiptId,\n    };\n  }\n}\n\nexport const iap = new IAP();\n"],"file":"index.js"}